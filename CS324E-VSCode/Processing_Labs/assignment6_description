We made a rules-based simulation with three different types of objects/actors: the Predators, the Prey, and the Resources. The rules for this simulation include certain elements of flocking with added rules for hunting, eating, and seperation.

Max did the Predator Class, which had two rules for autonomous movement: seperation from other Predators and hunting Prey. The objects in this class were represented as Lions, and contain properties and methods for movement direction based on other predators, direction based on nearest prey, and distance of nearest predators or prey.

Isaiah created the Prey Class, which considers rules both  for food proximity and predator proximity. They Prey class will obey two rules 1. Consume enough food to be satisfied within recent time frame 2. Avoid predators; which is balanced with avoiding starvation. The objects in this class are  represented as Antelopes. There are eat and movement functions in this class based on these rules. The biggest challenge was balancing the movement so the weight of each rule varied correctly with deep desire to satiate their driving hunger.

Patrick did the Resource Class, which has rules for depletion and respawning. The objects in this class are represented as grass. The resources are user controlled. When the user clicks on a spot, a resource appears. The rules for resources are as follows: 1. A resource will be given a set amount of "health." 2. For each frame, the health will drop one unit for every prey in the resource 3. Once the resource's health is zero or lower, the resource will be depleted, and the resource will disappear. As health is depleted, the resource fades. Because of user interactivity, arrayLists were used to store a variable number of objects. This is accomplished in the Resources class, which also contains functions to be used by the prey class to get the location of the nearest resource and to deplete the health of any resources with a prey in its bounds.

The largest challenege for this project was tweaking our rules/multipliers for the forces to create an outcome that we were happy with. The second largest challenge was definitely picking which features to include or not include, and which objects and/or rules we wanted to simulate.