Isaiah created the Prey Class, which had rules both for food proximity and predator proximity. They Prey class obeyed two rules 1. Consume enough food to be satisfied within recent time frame 2. Avoid predators; which is balanced with avoiding starvation. The objects in this class were represented as Antelopes. The biggest challenge he had was balancing the movement so the weight of each rule varied correctly with deep desire to satiate their driving hunger. Patrick did the Resource Class, which had rules for depletion and respawning. The objects in this class were represented as grass. The resources were user controlled. He made it so that when the user clicks on a spot, a resource appears. The rules for resources were as follows: 1. A resource is given a set amount of "health." 2. For each frame, the health drops one unit for every prey in the resource and 3. Once the resource's health is zero or lower, the resource will be depleted, and the resource will disappear. As health is depleted, the resource fades. Because of user interactivity, arrayLists were used to store a variable number of objects. This is accomplished in the Resources class, which also contains functions to be used by the prey class to get the location of the newerest resource and to deplete the health of any resources with a prey in its bounds. The largest challenege for this project was tweaking our rules/multipliers for the forces to create an outcome that we were happy with, which they both put a lot of work in to. Again, after each aspect was considered functional, we peer reviewed each others code including corrections, suggestions, and options for improved efficiency. This teamwork facillitated most of the more involved features and allowed us to improve each others code while improving our own. Overall, it was fun and easy experience with my team members and I highly enjoyed working with them. Everyone made an effort to be in calls on time and to be present and helpful during them. 5/5 for both of them.